@model Simir.Application.ViewModels.GrupoAcessoVM
@using Simir.WebInterfaceComAuth.Helpers
@using Simir.Domain.Enuns

@{
    ViewBag.Title = "Grupo de Acesso";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.GrupoAcessoID)
    @Html.HiddenFor(x => x.Btn)

    <div class="panel panel-default">
        <div class="panel-heading">
            Criação e configuração dos grupos de acesso do sistema
        </div>

        <div class="panel-body">
            <div class="row">
                <div class="col-md-12">
                    @Html.ValidationSummary(false, "(* campos obrigatórios)", new {@class = "text-danger"})
                    <div class="row" style="margin-left: -1.5%">
                        <div class="col-md-7">
                            @Html.EditBootstrapFor(model => model.nmProgramacao, tudoTamanho: 12, inputTamanho: 12)
                        </div>
                        <div class="col-md-1" style="Margin-top: 2%; margin-left: -3%;">
                            <div class="btn btn-success" onclick=" CarregaGrid(); " data-toggle="modal" data-target="#BuscaProgramacao">Localizar</div>
                        </div>
                    </div>
                    <div class="row" style="margin-left: 0%">
                        @Html.EditBootstrapFor(model => model.Descricao, tudoTamanho: 9, inputTamanho: 12)
                    </div>
                    <div class="col-md-12" style="margin-top: 2%;">
                        @Html.EditorFor(model => model.ListaAcesso, "IListGrupoAcesso")
                    </div>
                    @* --------------------- Localizar Programacao -------------- *@
                    <div class="row">
                        <div class="modal fade" id="BuscaProgramacao" role="dialog">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                                    </div>
                                    <div id="modal">

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group  pull-right">
                        @if (User.Identity.TemPermicao(TipoPermissao.Incluir) || User.Identity.TemPermicao(TipoPermissao.Alterar))
                        {
                            <div class="btn btn-default" onclick=" Novo();">Novo</div>
                            <div class="btn btn-success" onclick=" Salvar(); " data-confirm="Tem certeza que deseja salvar?">Salvar</div>
                        }
                        @if (User.Identity.TemPermicao(TipoPermissao.Excluir))
                        {
                            <div id="btnExcluir" class="btn btn-danger" onclick=" Excluir(); " data-confirm="Tem certeza que deseja excluir?">Excluir</div>
                        }
                    </div>

                </div>
            </div>
        </div>
    </div>
}
@section Scripts
        {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function carregaPagina() {

            if ($('#GrupoAcessoID').val() == 0) {
                $("#btnExcluir").hide();
            }
        }

        $(window).load(carregaPagina());


        function Salvar() {

            var form = $('form', '#page-inner');
            if (form.validate()) {
                $('#Btn').val("Salvar");
                form.submit();
                return true;
            }
        }


        function Novo() {

            var form = $('form', '#page-inner');
            if (form.validate()) {
                $('#Btn').val("Novo");
                form.submit();
                return true;
            }
        }


        function Excluir() {
            var form = $('form', '#page-inner');
            $('#Btn').val("Excluir");

            //$.desabilitaValidacao();
            $("[data-val='true']").attr('data-val', 'false');

            //Reset validation message
            $('.field-validation-error')
            .removeClass('field-validation-error')
            .addClass('field-validation-valid');

            //Reset input, select and textarea style
            $('.input-validation-error')
            .removeClass('input-validation-error')
            .addClass('valid');

            //Reset validation summary
            $(".validation-summary-errors")
            .removeClass("validation-summary-errors")
            .addClass("validation-summary-valid");

            //To reenable lazy validation (no validation until you submit the form)
            $('form').removeData('unobtrusiveValidation');
            $('form').removeData('validator');
            $.validator.unobtrusive.parse($('form'));

            form.submit();

        }

        function CarregaGrid() {
            $("#modal").load("/Configuracao/GrupoAcesso/BuscaProgramacao/");
        }

    </script>
}


