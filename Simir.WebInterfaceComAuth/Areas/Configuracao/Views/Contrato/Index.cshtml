@model Simir.Application.ViewModels.ContratoVMs.ContratoVM
@using Simir.WebInterfaceComAuth.Helpers
@using Simir.Domain.Enuns

@{
    ViewBag.Title = "Geradores de Resíduos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.ID)
    @Html.HiddenFor(x => x.Btn)


    <div class="panel panel-default">
        <div class="panel-heading">
            Cadastro de Prestadoras Públicas ou Privadas Executoras dos Serviços de LU e MR
        </div>
        <div class="panel-body">
            <div class="row">
                <div class="col-md-6">
                    @Html.ValidationSummary(false, "(* campos obrigatórios)", new { @class = "text-danger" })

                    <div class="row">
                        @Html.EditBootstrapFor(model => model.NumeroContrato, tudoTamanho: 10, inputTamanho: 12)

                    </div>
                    <div class="row">
                        @Html.EditBootstrapFor(model => model.InicioContrato, tudoTamanho: 6, inputTamanho: 6)
                        @Html.EditBootstrapFor(model => model.TerminoContrato, tudoTamanho: 6, inputTamanho: 6)
                    </div>
                    <div class="row">
                        @Html.DDLBootstrapFor(model => model.PrestadoraValor, Model.PrestadoraDescricao, "/Configuracao/Contrato/Prestadoras/")
                    </div>

                    <div class="row">
                        @Html.EditBootstrapFor(model => model.TotalFuncionarios)
                    </div>

                    <div class="row">
                        @Html.EditBootstrapFor(model => model.ValorTotalContrato)

                        @Html.EditBootstrapFor(model => model.ValorPagoAteHoje)
                    </div>
                    
                    <div class="form-group ">
                        <label>Forma de pagamento</label>
                        <div class="form-group col-md-12">
                            <div class="radio">

                                <label>
                                    @Html.RadioButtonFor(x => x.FormaPagamento, Periodo.Mensal) Mensal
                                </label>
                            </div>
                            <div class="radio">
                                <label>
                                    @Html.RadioButtonFor(x => x.FormaPagamento, Periodo.Bimestral) Bimestral
                                </label>
                            </div>
                            <div class="radio">
                                <label>
                                    @Html.RadioButtonFor(x => x.FormaPagamento, Periodo.Semestral) Semestral
                                </label>
                            </div>
                            <div class="radio">
                                <label>
                                    @Html.RadioButtonFor(x => x.FormaPagamento, Periodo.Anual)	Anual
                                </label>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        @Html.EditBootstrapFor(model => model.DataUltimoPagamento,tudoTamanho:12,inputTamanho:4)
                    </div>

                </div>
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Servicos, "IListContratoServicoVM")
                    @Html.EditorFor(model => model.Equipamentos, "IListContratoEquipamentoVM")
                </div>
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Veiculos, "IListContratoVeiculoVM")
                </div>
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Funcoes, "IListContratoFuncaoVM")
                </div>
                <div class="col-md-12">
                    <hr />
                    <div class="form-group  pull-right">
                        <a class="btn btn-default" href="@Url.Action("Index", "PrestadoraServico", new {area = "Configuracao", id = ""})">
                            Novo
                        </a>
                        <div class="btn btn-success" onclick="confirmaSecretaria();" data-confirm="Tem certeza que deseja salvar?">Salvar</div>
                        <div id="btnExcluir" class="btn btn-danger" onclick="excluirSecretaria();" data-confirm="Tem certeza que deseja excluir?">Excluir</div>

                    </div>
                </div>
                <div class="row">
                    <div class="modal fade" id="BuscaProgramacao" role="dialog">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                                </div>
                                <div id="modal">

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function carregaPagina() {

            if ($('#PrestadoraServicosID').val() == 0) {
                $("#btnExcluir").hide();
            };

            btnPanel("#bRealizaPintura", "Guias");
            btnPanel("#bRealizaVarricao", "varri");
            btnPanel("#bRealizaPodasArvores", "podas");
            btnPanel("#bRealizaColeta", "coleta");

            if ($('#bRealizaLavagem').val() == 'True') {
                //$("#btn-sim-podas").click();
            };
        }

        function btnPanel(idVar, idPanel) {
            $("#btn-sim-" + idPanel).click(function () {
                $(idVar).val('True');
            })

            $("#btn-nao-" + idPanel).click(function () {
                $(idVar).val('False');
            })

            if ($(idVar).val() == 'True') {
                $("#btn-sim-" + idPanel).click();
            };

            if ($(idVar).val() == 'False') {
                $("#btn-nao-" + idPanel).click();
            };
        };

        $(window).load(disabilitaEndereco(true, false));
        $(window).load(carregaPagina());



        function confirmaSecretaria() {

            var form = $("form", "#page-inner");
            if (form.validate()) {
                $("#Btn").val("Salvar");
                form.submit();
                // return true;
            }

        }
        function excluirSecretaria() {
            var form = $('form', '#page-inner');
            $('#Btn').val("Excluir");

            //$.desabilitaValidacao();
            $("[data-val='true']").attr('data-val', 'false');

            //Reset validation message
            $('.field-validation-error')
            .removeClass('field-validation-error')
            .addClass('field-validation-valid');

            //Reset input, select and textarea style
            $('.input-validation-error')
            .removeClass('input-validation-error')
            .addClass('valid');

            //Reset validation summary
            $(".validation-summary-errors")
            .removeClass("validation-summary-errors")
            .addClass("validation-summary-valid");

            //To reenable lazy validation (no validation until you submit the form)
            $('form').removeData('unobtrusiveValidation');
            $('form').removeData('validator');
            $.validator.unobtrusive.parse($('form'));

            form.submit();

        }


        function CarregaGrid() {
            $.blockUI({ message: '<div class="ModalCarregando"></dic>' });
            $("#modal").load("/Configuracao/PrestadoraServico/BuscaProgramacao/");
        }


    </script>
}


