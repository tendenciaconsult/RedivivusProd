@model Simir.Application.ViewModels.DestinadorVMs.ResiduosRecebidosVM
@using Simir.WebInterfaceComAuth.Helpers

@{
    ViewBag.Title = "Destinador";
    Layout = "~/Views/Shared/_LayoutExterno.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    @Html.HiddenFor(model => model.ResiduosRecebidosID)

    <div class="panel panel-default">
        <div class="panel-heading">
            Resíduos Recebido
        </div>
        <div class="panel-body">
            @Html.ValidationSummary()
                <div class="row">
                    <div class="col-md-6">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group ">
                                    <label>De onde veio o resíduo?</label>
                                    <div class="form-group col-md-12">
                                        <div class="radio">

                                            <label>
                                                @Html.RadioButtonFor(x => x.DePrefeitura, "True") Prefeitura
                                            </label>
                                        </div>
                                        <div class="radio">
                                            <label>
                                                @Html.RadioButtonFor(x => x.DePrefeitura, "False") Empresa privada
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        Veio de um transbordo? *
                                    </div>
                                    <div class="panel-body">
                                        <div class="form-group ">
                                            <div class="col-md-12">
                                                <div class="row ">
                                                    @Html.LabelFor(m => m.RealizouTransbordo)
                                                    <label class="switch input-group col-xs-12">
                                                        @Html.RadioButtonFor(m => m.RealizouTransbordo, "True", new { id = "simRealizouTransbordo", @class = "switch-input" })
                                                        <label for="simRealizouTransbordo" class="switch-label switch-label-off">Sim</label>

                                                        @Html.RadioButtonFor(m => m.RealizouTransbordo, "False", new { id = "naoRealizouTransbordo", @class = "switch-input" })
                                                        <label for="naoRealizouTransbordo" class="switch-label switch-label-on">Não</label>
                                                        <span class="switch-selection"></span>
                                                    </label>

                                                </div>
                                            </div>

                                            <div id="TransbordoCnpjInv" style=@(Model.RealizouTransbordo?"":"display:none")>
                                                @Html.LabelFor(model => model.TransbordoCnpj)
                                                <div class="input-group">
                                                    @Html.TextBoxFor(model => model.TransbordoCnpj, new { @class = "form-control", @data_mask = "99.999.999/9999-99", maxlength = "18" })
                                                    <span class="form-group input-group-btn">
                                                        <button class="btn btn-default buscaCnpj" type="button" simir-razaosocial="TransbordoSocial">Consultar!</button>
                                                    </span>
                                                </div>
                                                @Html.ValidationMessageFor(model => model.TransbordoCnpj, "", new { @class = "text-danger" })

                                                <div class="row TransbordoSocial" style="display: none;">
                                                    @Html.EditBootstrapFor(model => model.TransbordoSocial)
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                        <div class="col-md-6">
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    Dados da Transportadora
                                </div>
                                <div class="panel-body">
                                    <div class="form-group">

                                        @Html.LabelFor(model => model.TransportadoraCnpj)
                                        <div class="input-group">
                                            @Html.TextBoxFor(model => model.TransportadoraCnpj, new { @class = "form-control", @data_mask = "99.999.999/9999-99", maxlength = "18" })
                                            <span class="form-group input-group-btn">
                                                <button class="btn btn-default buscaCnpj" type="button" simir-razaosocial="TransportadoraSocial">Consultar!</button>
                                            </span>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.TransportadoraCnpj, "", new { @class = "text-danger" })

                                        <div class="row TransportadoraSocial" style="display: none;">
                                            @Html.EditBootstrapFor(model => model.TransportadoraSocial)
                                        </div>
                                        <div class="row">
                                            @Html.EditBootstrapFor(model => model.DataEntrega)
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>


                        <div class="row">
                            <div class="col-md-6">
                                <div class="row">
                                    @Html.DDLBootstrapFor(model => model.TipoListaValor, model => model.TipoListaDescricao, "/Cadastros/Residuo/TipoLista/", "", model => model.RamoValor)
                                    @Html.DDLBootstrapFor(model => model.RamoValor, model => model.RamoDescricao, "/Cadastros/Residuo/Ramo/", model => model.TipoListaValor, model => model.ClassificacaoResiduoValor)
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="row">
                                    @Html.DDLBootstrapFor(model => model.ClassificacaoResiduoValor, model => model.ClassificacaoResiduoDescricao, "/Cadastros/Residuo/Classificacao/", model => model.RamoValor, null)

                                    <div class="form-group col-xs-5">
                                        <label> </label>
                                        <div onclick=" addResiduo() " class="form-control btn btn-default" data-confirm="Isso fará com que delete todos os dados da listas atual e iniciará uma nova lista. Tem certeza disso?">
                                            <i class="fa fa-list"></i> Listar
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                @Html.ValidationMessageFor(model => model.Residuos, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th class="col-md-3">@Html.DisplayNameFor(model => model.Residuos.First().Nome)</th>
                                            <th class="col-md-5">@Html.DisplayNameFor(model => model.Residuos.First().Descricao)</th>
                                            <th class="col-md-2">@Html.DisplayNameFor(model => model.Residuos.First().Quantidade)</th>
                                            <th class="col-md-2">@Html.DisplayNameFor(model => model.Residuos.First().Medida)</th>
                                        </tr>
                                    </thead>
                                    <tbody id="tblResiduoLista"></tbody>
                                </table>
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-md-2 pull-right">
                                <div onclick=" incluirResiduos(); " class="form-control btn btn-default">
                                    <i class="fa fa-plus-circle"></i> Incluir
                                </div>
                            </div>
                        </div>

                        <div class="panel panel-default">
                            <div class="panel-heading">
                                Resíduos
                            </div>
                            <div class="panel-body">
                                <div class="row">
                                    <div class="col-md-12">
                                        <table class="table">
                                            <thead>
                                                <tr>
                                                    <th class="col-md-2">@Html.DisplayNameFor(model => model.Residuos.First().Nome)</th>
                                                    <th class="col-md-5">@Html.DisplayNameFor(model => model.Residuos.First().Descricao)</th>
                                                    <th class="col-md-2">@Html.DisplayNameFor(model => model.Residuos.First().Quantidade)</th>
                                                    <th class="col-md-2">@Html.DisplayNameFor(model => model.Residuos.First().Medida)</th>
                                                    <th class="col-md-1"></th>
                                                </tr>
                                            </thead>
                                            <tbody id="tblResiduo">
                                                @for (int i = 0; i < Model.Residuos.Count; i++)
                                                {
                                                    <tr>
                                                        <td>
                                                            @Html.DisplayFor(m => m.Residuos[i].Nome)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(m => m.Residuos[i].Descricao)
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(m => m.Residuos[i].Quantidade, new { @class = "form-control" })
                                                        </td>

                                                        <td>

                                                            <label class="switch">
                                                                @Html.RadioButtonFor(m => m.Residuos[i].Medida, "True", new { id = "res" + i, @class = "switch-input" })
                                                                <label for="@("res" + i)" class="switch-label switch-label-off">litro</label>

                                                                @Html.RadioButtonFor(m => m.Residuos[i].Medida, "False", new { id = "kg" + i, @class = "switch-input" })
                                                                <label for="@("kg" + i)" class="switch-label switch-label-on">Kg</label>
                                                                <span class="switch-selection"></span>
                                                            </label>

                                                        </td>
                                                        @Html.HiddenFor(m => m.Residuos[i].Id)
                                                        @Html.HiddenFor(m => m.Residuos[i].IdItem)
                                                        @Html.HiddenFor(m => m.Residuos[i].Status, new { @class = "inpStatus" })

                                                        <td>
                                                            <div class="btn btn-danger btnExcluir">
                                                                <i class="fa fa-trash-o"></i>
                                                            </div>
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>

                            </div>

                        </div>


                        <div class="col-md-12">
                            <hr />
                            <div class="form-group  pull-right">
                                <a class="btn btn-default" href="@Url.Action("ResiduosRecebidos", "Destinador", new {area = "Externo"})">
                                    Cancelar
                                </a>
                                <div onclick=" confirmar(); " data-confirm="Tem certeza que deseja salvar?" class="btn btn-success">
                                    Salvar
                                </div>
                            </div>
                        </div>
                    </div>
    </div>


}

<div class="panel panel-default">
    <div class="panel-heading">
        <div class="panel-title ">
            Histórico de Resíduos Gerados
            <div class="pull-right">
                <div style="display: inline-block;">

                    <div id="carregando" style="display: none;">
                        <i class="fa fa-refresh fa-spin fa-fw"></i>Carregando...
                    </div>
                </div>
                <div class="btn btn-success btn-xs" onclick="CarregaGrid();" data-toggle="modal" data-target="#BuscaProgramacao"><i class="fa fa-angle-double-down fa-fw"></i></div>

            </div>
        </div>

    </div>
    <div id="collapseOne" class="panel-collapse collapse" style="height: 0px;">
        <div class="panel-body">
            <div id="modal">

            </div>
        </div>
    </div>


</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        function CarregaGrid() {
            $('.collapse').collapse('show');
            $('#carregando').show();
            $("#modal").load("/Externo/Gerador/HistoricoGeracao/", function () {
                $('#carregando').hide();
            });
        }
        $(".btnExcluir").click(
            function () {
                var linha = $(this).closest('tr');
                linha.find(".inpStatus").val('8');
                linha.find('input:eq(0)').val('0');
                linha.hide();
            });


        $('input[type=radio][name=RealizouTransbordo]').change(function () {
            if (this.value == 'True') {
                $('#TransbordoCnpjInv').fadeIn("slow");
            }
            else if (this.value == 'False') {
                $('#TransbordoCnpjInv').fadeOut("slow");
            }
        });


        function confirmar() {

            var form = $("form", "#page-inner");

            if (form.valid()) {
                form.submit();
                // return true;
            }


        }


        function incluirResiduos() {

            var linhasLista = $('tr', '#tblResiduoLista');
            var linhas = $('#tblResiduo');
            var indexLinha = $('tr', '#tblResiduo').length;

            $.each(linhasLista, function (key, value) {
                if (jQuery(value).find('td:eq(2) input').val() > 0) {
                    var linha = $(document.createElement('tr'));
                    linha.append(jQuery(value).find('td:eq(0)').clone());
                    linha.append(jQuery(value).find('td:eq(1)').clone());
                    var qti = jQuery(value).find('td:eq(2)').clone();
                    jQuery(qti).find('input').attr("id", "Residuos_" + indexLinha + "__Quantidade");
                    jQuery(qti).find('input').attr("name", "Residuos[" + indexLinha + "].Quantidade");
                    linha.append(qti);

                    var medida = jQuery(value).find('td:eq(3)').clone();
                    jQuery(medida).find('input:eq(0)').attr("name", "Residuos[" + indexLinha + "].Medida");
                    jQuery(medida).find('input:eq(1)').attr("name", "Residuos[" + indexLinha + "].Medida");
                    linha.append(medida);

                    var idResiduo = jQuery(value).children('input:eq(0)').clone();
                    jQuery(idResiduo).attr("id", "Residuos_" + indexLinha + "__Id");
                    jQuery(idResiduo).attr("name", "Residuos[" + indexLinha + "].Id");
                    linha.append(idResiduo);


                    linha.append('<input class="form-control" id="Residuos_[' + indexLinha + ']__IdItem" name="Residuos[' + indexLinha + '].IdItem" type="hidden" value="0">');
                    linha.append('<input class="form-control" id="Residuos_[' + indexLinha + ']__Status" name="Residuos[' + indexLinha + '].Status" type="hidden" value="4">');
                    linha.append('<td> <div class="btn btn-danger btnExcluirNovo"><i class="fa fa-trash-o"></i></div></td>');
                    linha.find('.btnExcluirNovo').click(
                        function () {
                            var linha = $(this).closest('tr');
                            linha.remove();
                        });
                    linhas.append(linha);
                    indexLinha++;
                }

            });

            $('#tblResiduoLista').html('');

        };
        function addResiduo() {
            addErros("Residuos", []);
            var listaId = $("#TipoListaValor").val();
            var atividadeId = $("#RamoValor").val();
            var classeId = $("#ClassificacaoResiduoValor").val();

            if (listaId < 1) {
                addErros("Residuos", "Selecione o tipo de lista");
                return;
            };
            if (atividadeId < 1) {
                addErros("Residuos", "Selecione a atividade desenvolvidade na geração do resíduo");
                return;
            }
            if (classeId < 1) {
                addErros("Residuos", "Selecione a classificação");
                return;
            }

            $.ajax({
                type: 'get',
                url: '/Cadastros/Residuo/Residuos/?listaId=' + listaId + '&atividadeId=' + atividadeId + '&classeId=' + classeId,
                dataType: 'json',
                success: function (data) {
                    console.log(data);
                    if (data.length > 0) {
                        mudaResiduos(data);
                    } else {
                        addErros("Residuos", "Nenhum resíduo encontrado.");
                    }
                    console.log(data);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    addErros("Residuos", "Erro interno. Tente novamente mais tarde.");
                    //$("span[data-valmsg-for='Mtr'").html("Erro interno. Tente novamente mais tarde.");
                }
            });

        };


        function mudaResiduos(data) {
            var linhas = $('#tblResiduoLista');
            linhas.html('');
            $.each(data, function (index, value) {
                var linha = $(document.createElement('tr'));
                linha.append($('<td></td>').html(value[1]));
                linha.append($('<td></td>').html(value[2]));
                linha.append($('<td></td>').html('<input class="form-control" data-val-number="Qtde. não é um número." id="Residuos_' + index + '__Quantidade" name="Residuos[' + index + '].Quantidade" type="text" value="">'));
                linha.append($('<td></td>').html('<label class="switch">' +
                    '<input checked="checked" class="switch-input"  id="zzres' + index + '" type="radio" value="True">' +
                    '<label for="zzres' + index + '" class="switch-label switch-label-off">litro</label>' +
                    '<input class="switch-input" id="zzkg' + index + '" type="radio" value="False">' +
                    '<label for="zzkg' + index + '" class="switch-label switch-label-on">Kg</label>' +
                    '<span class="switch-selection"></span>' +
                    '</label>'));
                linha.append('<input class="form-control" type="hidden" value="' + value[0] + '">');

                linhas.append(linha);

            });

        };


        $(function () {

            var progress = $('.progress');
            var bar = $('.progress-bar');
            var percent = $('.sr-only', '.progress-bar');
            var status = $('#status');

            $('#formInclirMtr').ajaxForm({
                beforeSend: function () {

                    status.empty();
                    var percentVal = '0%';
                    bar.width(percentVal)
                    percent.html(percentVal);
                    progress.show();
                },
                uploadProgress: function (event, position, total, percentComplete) {
                    var percentVal = percentComplete + '%';
                    bar.width(percentVal)
                    percent.html(percentVal);
                },
                success: function () {
                    var percentVal = '100%';
                    bar.width(percentVal)
                    percent.html(percentVal);
                    progress.hide();
                },
                complete: function (xhr) {
                    status.html(xhr.responseText);
                    location.reload();
                }
            });

        })();

        function excluirMtr(id) {
            $.ajax({
                type: 'get',
                url: '/Externo/Gerador/ExcluirMtr/' + id,
                dataType: 'json',
                success: function (data) {
                    console.log(data);
                    if (data.length > 0) {
                        addErros("Mtr", data);
                    } else {
                        location.reload();
                    }
                    console.log(data);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    addErros("Mtr", "Erro interno. Tente novamente mais tarde.");
                    //$("span[data-valmsg-for='Mtr'").html("Erro interno. Tente novamente mais tarde.");
                },
            });
        }

        $(function () {
            $('.view-pdf').on('click', function () {
                var pdf_link = $(this).attr('data-link') + '\\' + $(this).attr('data-nome');
                pdf_link = @Html.Raw(HttpUtility.JavaScriptStringEncode(
        new Uri(
                   new Uri(this.Context.Request.Url.GetLeftPart(UriPartial.Authority)),
Url.Content("~/Upload/")
               ).ToString(), true)) +$(this).attr('data-nome');
                var iframe = '<object type="application/pdf" data="' + pdf_link + '" width="100%" height="100%">No Support</object>'

                var myModal = new jBox('Modal', {
                    width: '1000',
                    height: '500',
                    content: iframe
                });

                myModal.open();

                return false;
            });
        });
    </script>
}


